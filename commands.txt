# reset database (old)
DROP TABLE description, location, location_description, place, place_description, place_uris, placename;

# reset database
DROP TABLE comment, identifier, location, place, place_uris, place_comment, place_identifier, place_place, place_tag, place_uris, placename, tag, thesaurus, thesaurus_place;

# reset index
curl -XDELETE 'http://localhost:9200/gazetteer'

# configure MongoDB replica set using "localhost" as hostname instead of "Hostname.local"
rs.initiate({ _id : "rs0", members : [ { _id : 0, host : "localhost:27017" } ] })

# elasticsearch mapping for places
{
    "place": {
    	"_all": {
    		"omit_norms": true
    	},
		"_id": {
			"index": "not_analyzed",
			"include_in_all": true
		},
        "properties": {
            "prefName": {
                "properties": {
                    "language": {
                        "type": "string"
                    },
                    "modern": {
                        "type": "boolean"
                    },
                    "title": {
                        "type": "multi_field",
						"boost": 2.0,
						"fields": {
							"title": {
								"type" : "string"
							},
                    		"sort" : {
								"type" : "string",
								"index" : "not_analyzed"
							}
						}
                    }
                }
            },
            "thesaurus": {
                "type": "multi_field",
				"fields": {
					"title": {
						"type" : "string"
					},
            		"sort" : {
						"type" : "string",
						"index" : "not_analyzed"
					}
				}
			},
            "children": {
                "type": "string",
				"include_in_all": false
            },
            "deleted": {
                "type": "boolean"
            },
            "ids": {
                "properties": {
                    "context": {
                        "type": "string",
						"index": "not_analyzed",
						"include_in_all": false
                    },
                    "value": {
                        "type": "string"
                    }
                }
            },
            "links": {
                "properties": {
                    "object": {
                        "type": "string",
						"index": "not_analyzed"
                    },
                    "predicate": {
                        "type": "string",
						"index": "not_analyzed",
						"include_in_all": false
                    }
                }
            },
            "locations": {
                "properties": {
                    "confidence": {
                        "type": "long",
						"include_in_all": false
                    },
                    "coordinates": {
                        "type": "geo_point"
					}
                }
            },
            "names": {
                "properties": {
                    "language": {
                        "type": "string",
						"include_in_all": false
                    },
                    "modern": {
                        "type": "boolean",
						"include_in_all": false
                    },
                    "title": {
                        "type": "string"
                    }
                }
            },
            "needsReview": {
                "type": "boolean"
            },
            "parent": {
                "type": "string",
				"include_in_all": false
            },
            "type": {
                "type": "string"
			},
            "_class": {
                "type": "string",
				"include_in_all": false
            }
        }
    }
}