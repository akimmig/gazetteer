# reset database (old)
DROP TABLE description, location, location_description, place, place_description, place_uris, placename;

# reset database
DROP TABLE comment, identifier, location, place, place_uris, place_comment, place_identifier, place_place, place_tag, place_uris, placename, tag, thesaurus, thesaurus_place;

# reset index
curl -XDELETE 'http://localhost:9200/gazetteer'

# configure MongoDB replica set using "localhost" as hostname instead of "Hostname.local"
rs.initiate({ _id : "rs0", members : [ { _id : 0, host : "localhost:27017" } ] })

# elasticsearch index template

{
    "template" : "gazetteer*",
    "settings" : {
        "analysis": {
            "analyzer" : {
            	"default": {
            		"tokenizer" : "standard",
                    "filter" : ["standard", "lowercase", "custom_snowball"]
            	},
                "collation" : {
                    "tokenizer" : "keyword",
                    "filter" : ["collation_filter"]
                }
            },
            "filter" : {
            	"custom_snowball": {
            		"type" : "snowball",
                    "language" : "German2"
            	},
                "collation_filter" : {
                    "type" : "icu_collation",
                    "language" : "de"
                }
            }
        }
    },
    "mappings" : {
	    "place": {
	    	"_all": {
	    		"omit_norms": true
	    	},
			"_id": {
				"index": "not_analyzed",
				"include_in_all": true
			},
	        "properties": {
	            "prefName": {
	                "properties": {
	                    "language": {
	                        "type": "string"
	                    },
	                    "modern": {
	                        "type": "boolean"
	                    },
	                    "title": {
	                        "type": "multi_field",
							"boost": 2.0,
							"fields": {
								"title": {
									"type" : "string"
								},
	                    		"sort" : {
									"type" : "string",
									"analyzer": "collation"
								}
							}
	                    }
	                }
	            },
	            "prefLocation": {
	            	"properties": {
	                    "confidence": {
	                        "type": "long",
							"include_in_all": false
	                    },
	                    "coordinates": {
	                        "type": "geo_point"
						}
	                }
	            },
	            "thesauri": {
	                "type": "string"
	            },
	            "children": {
	                "type": "integer",
					"include_in_all": false
	            },
	            "deleted": {
	                "type": "boolean"
	            },
	            "ids": {
	            	"type": "nested",
	                "properties": {
	                    "context": {
	                        "type": "string",
							"index": "not_analyzed",
							"include_in_all": false
	                    },
	                    "value": {
	                        "type": "string"
	                    }
	                }
	            },
	            "links": {
	            	"type": "nested",
	                "properties": {
	                    "object": {
	                        "type": "string",
							"index": "not_analyzed"
	                    },
	                    "predicate": {
	                        "type": "string",
							"index": "not_analyzed",
							"include_in_all": false
	                    }
	                }
	            },
	            "locations": {
	            	"type": "nested",
	                "properties": {
	                    "confidence": {
	                        "type": "long",
							"include_in_all": false
	                    },
	                    "coordinates": {
	                        "type": "geo_point"
						}
	                }
	            },
	            "names": {
	            	"type": "nested",
	                "properties": {
	                    "language": {
	                        "type": "string",
							"include_in_all": false
	                    },
	                    "modern": {
	                        "type": "boolean",
							"include_in_all": false
	                    },
	                    "title": {
	                        "type": "string"
	                    }
	                }
	            },
	            "needsReview": {
	                "type": "boolean"
	            },
	            "parent": {
	                "type": "string",
					"include_in_all": false
	            },
	            "type": {
	                "type": "string"
				},
	            "_class": {
	                "type": "string",
					"include_in_all": false
	            }
	        }
	    }
    }
}


# elasticsearch river config
{
    "type": "mongodb",
    "mongodb": {
        "db": "gazetteer",
        "collection": "place"
    },
    "index": {
        "name": "gazetteer_2013-08-07",
        "type": "place"
    }
}

